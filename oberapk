#!/bin/bash
#
# 2018/08/30 Gabriel Moreau <Gabriel.Moreau@univ-grenoble-alpes.fr>
# 2022/01/27 Gabriel Moreau : modulate
#
# oberapk
#
## Binaries: id su cat grep cut sed cut sort paste reprepro

export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin
export LANG=C

VERSION='0.7.3'

# Global variables
export CONF_FILE=/etc/oberapk/oberapk.conf
if [ -e "$HOME/.config/oberapk/oberapk.conf" ]
then
   CONF_FILE=$HOME/.config/oberapk/oberapk.conf
fi
export PAKAJ_FOLDER=/usr/lib/oberapk/pakaj.d
export REPREPRO=/var/www/debian
if [ -e '/etc/oberapk/oberapk.sh' ]
then
   source /etc/oberapk/oberapk.sh
fi
if [ -e "$HOME/.config/oberapk/oberapk.sh" ]
then
   source "$HOME/.config/oberapk/oberapk.sh"
fi

# Not run as root
if [ "$(id --user)" -eq 0 ]
then
   if [[ -n "${RUN_USER}" && $(id --user "${RUN_USER}" 2> /dev/null) -gt 0 ]]
   then
      exec su - "${RUN_USER}" --command "$0 $*"
   fi
   echo 'Error: do not run oberapk as user root'
   echo ''
   usage
   exit 1
fi

################################################################
# cmd: grep cut sort sed cat

# breton / francais  / english
# -------------------------------
# ober   / contruire / make
# pakaj  / emballage / packaging
# stroll / ensemble  / kit

function usage() {
   cat <<END_USAGE
NAME
 oberapk - generate package

SYNOPSIS
 oberapk avail
 oberapk list
 oberapk kit
 oberapk update pkg
 oberapk upgrade kit
 oberapk pushed pkg
 oberapk remove pkg
 oberapk source pkg
 oberapk binaries
 oberapk version
 oberapk help

AUTHOR
 Gabriel Moreau <Gabriel.Moreau@univ-grenoble-alpes.fr>

COPYRIGHT
 Copyright (C) 2017-2025, LEGI UMR 5519 / CNRS UGA G-INP, Grenoble, France
 Licence : GNU GPL version 2 or later
END_USAGE
   }

################################################################

function get_pakaj () {
   kit=$1
   echo "${kit}" | grep -E -q '^[[:alpha:]][[:alpha:][:digit:]-]*$' || return
   while read -r pakaj
   do
      if echo "${pakaj}" | grep -q "^@"
      then
         get_pakaj "${pakaj/@}"
      else
         echo "${pakaj}" | grep -E '^[[:alpha:]][[:alpha:][:digit:]-]*$'
      fi
   done < <(grep "^@${kit}:" "${CONF_FILE}" | cut -f 2- -d ':' | sed -e 's/ /\n/g;' | grep .) | sort -uR
   }

################################################################

function cmd_avail () {
   for pakaj in "${PAKAJ_FOLDER}"/*.sh
   do
      source "${pakaj}"
   done

   set | grep -E '^oberpakaj_.*[[:space:]]()$' | cut -f 2- -d '_' | cut -f 1 -d ' ' | sed -e 's/_/-/g;' | grep -E '^[[:alpha:]][[:alpha:][:digit:]-]*$' | sort -u
   }

################################################################

function cmd_list () {
   while read -r pakaj
   do
      if [ -e "${PAKAJ_FOLDER}/${pakaj}.sh" ]
      then
         echo "${pakaj}"
      else
         echo "${pakaj} # Error: no component"
      fi
   done < <(grep -E "^[[:alpha:]][[:alpha:][:digit:]-]*:[[:digit:]]*:" "${CONF_FILE}" | cut -f 1 -d ':' | sort -u)
   }

################################################################

function cmd_kit () {
   grep -E "^@[[:alpha:]][[:alpha:][:digit:]-]*: " "${CONF_FILE}" | cut -f 1 -d ':' | sed -e 's/^@//;' | grep . | sort -u
   }

################################################################

function cmd_update () {
   pakaj=$1

   if [ ! -e "${PAKAJ_FOLDER}/${pakaj}.sh" ]
   then
      echo "Error: no component ${pakaj}"
      exit 2
   fi

   # Conf file parameter by pakaj
   keep=$(grep "^${pakaj}:" "${CONF_FILE}" | cut -f 2 -d ':')
   distrib=$(grep "^${pakaj}:" "${CONF_FILE}" | cut -f 3- -d ':')
   if [ "${keep}" = '' ]
   then
      keep=3
   fi
   if ! echo "${keep}" | grep -q '^[[:digit:]]*$'
   then
      keep=3
   fi

   source "${PAKAJ_FOLDER}/${pakaj}.sh"
   pakaj_code=$(echo "oberpakaj_${pakaj}" | sed -e 's/-/_/g;')

   # Launch bash function
   ${pakaj_code} "${keep}" "${distrib}"
   }

################################################################

function cmd_pushed () {
   pakaj=$1

   regex=$( (echo "${pakaj}"; grep -E '^##[[:space:]](Pakaj|Package):' "${PAKAJ_FOLDER}/${pakaj}.sh" 2> /dev/null | cut -f 2 -d ':') | sed 's/[[:space:]]/\n/g;' | sort -u | grep . | paste -sd '|')

   ( cd "${REPREPRO}" || exit 3 ; reprepro dumpreferences ) 2> /dev/null | grep -E "/(${regex})[_-].*.deb"
   }

################################################################

function cmd_source () {
   pakaj=$1

   if [ ! -e "${PAKAJ_FOLDER}/${pakaj}.sh" ]
   then
      echo "# Error: no component ${pakaj}"
      exit 2
   fi

   echo "# eval this result"
   echo "export REPREPRO='${REPREPRO}';"
   echo "source '${PAKAJ_FOLDER}/${pakaj}.sh';"
   echo "# oberpakaj_${pakaj} keep distrib;"
   }

################################################################

function cmd_remove () {
   pakaj=$1

   # bookworm|main|amd64 pool/main/p/pkg-name/pkg-name_1.102.0-21567.1_amd64.deb
   while read -r distcpu pool eol
   do
      dist=${distcpu%%|*}
      package=$(basename "${pool%%_*}")
      echo "( cd '${REPREPRO}' ; reprepro remove '${dist}' '${package}' )"
   done < <(oberapk pushed "${pakaj}") | sort -u
   }

################################################################

case $1 in
   avail)
      cmd_avail
      exit
      ;;

   list)
      cmd_list
      exit
      ;;

   kit)
      cmd_kit
      exit
      ;;

   source)
      pakaj=$2
      cmd_source "${pakaj}"
      exit
      ;;

   update)
      pakaj=$2
      cmd_update "${pakaj}"
      exit
      ;;

   pushed)
      pakaj=$2
      cmd_pushed "${pakaj}"
      exit
      ;;

   remove)
      pakaj=$2
      cmd_remove "${pakaj}"
      exit
      ;;

   upgrade)
      kit=$2
      for pakaj in $(get_pakaj "${kit}")
      do
         echo ''
         echo "Info: begin update package ${pakaj}"
         oberapk update "${pakaj}"
      done
      exit
      ;;

   binaries)
      grep -h '^## Binaries:' "$0" "${PAKAJ_FOLDER}"/*.sh | cut -f 2 -d ':' | sed 's/\s/\n/g;' | sort -u | grep . | paste -sd ' '
      exit
      ;;

   version)
      echo "VERSION ${VERSION}"
      exit
      ;;

   help|*)
      usage
      exit
      ;;
esac

# No Command
usage
exit


